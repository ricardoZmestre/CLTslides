xyplot(EmissionsPct ~ year, data=NEImotorIndex, groups=fips,
outer=TRUE, type="b", #auto.key=list(columns=2, points=TRUE),
auto.key=list(text=list(unname(legend)), columns=2, points=TRUE),
ylab='Emissions', xlab="",
main=expression(paste("Total ", PM[2.5], " Motor Emissions ",
scriptstyle(italic('(index, 1999=100)')))),
scales=list(x=list(at=c(1999,2002,2005,2008))))
xyplot(EmissionsPct ~ year, data=NEImotorIndex, groups=fips,
outer=TRUE, type="b", #auto.key=list(columns=2, points=TRUE),
auto.key=list(text=legend, columns=2, points=TRUE),
ylab='Emissions', xlab="",
main=expression(paste("Total ", PM[2.5], " Motor Emissions ",
scriptstyle(italic('(index, 1999=100)')))),
scales=list(x=list(at=c(1999,2002,2005,2008))))
legend <- c('06037'="Los Angeles", '24510'="Baltimore")[unique(NEImotorIndex$fips)]
xyplot(EmissionsPct ~ year, data=NEImotorIndex, groups=fips,
outer=TRUE, type="b",
auto.key=list(text=legend, columns=2, points=TRUE),
ylab='Emissions', xlab="",
main=expression(paste("Total ", PM[2.5], " Motor Emissions ",
scriptstyle(italic('(index, 1999=100)')))),
scales=list(x=list(at=c(1999,2002,2005,2008))))
dev.copy(png, 'plot6.png')
dev.off()
library(R.util)
library(R.utils)
library(ggplot2)
plot(mtcars$wt, mtcars$mpg)
qplot(mtcars$wt, mtcars$mpg)
qplot(wt, mpg, data=mtcars)
ggplot(mtcars, aes(x=wt, y=mpg)) + geom_point()
plot(pressure$temperature, pressue$pressure, type='l')
plot(pressure$temperature, pressure$pressure, type='l')
points(pressure$temperature, pressure$pressure)
lines(pressure$temperature, pressure$pressure/2, col='red')
points(pressure$temperature, pressure$pressure/2, col='red')
qplot(data=pressure, temperature, pressure, geom='line')
qplot(data=pressure, temperature, pressure, geom=c('line', 'point'))
ggplot(pressure, aes(x=temperature, y=pressure)) + geom_line() + geom_point()
ggplot(pressure, aes(x=temperature, y=pressure)) + geom_line() + geom_point() +
coord_flip()
ggplot(pressure, aes(x=temperature, y=pressure)) + layer(aes(y=pressure/2)) + geom_line() + geom_point()
ggplot(data=pressure, aes(x=temperature, y=pressure)) + layer(aes(y=pressure/2)) + geom_line() + geom_point()
ggplot(data=pressure, aes(x=temperature, y=pressure)) + layer(pressure, aes(y=pressure/2)) + geom_line() + geom_point()
ggplot(data=pressure, aes(x=temperature, y=pressure)) + layer(pressure, aes(y=pressure/2), geom='line') + geom_line() + geom_point()
ggplot(data=pressure, aes(x=temperature, y=pressure)) + geom_line() + geom_point()
ggplot(data=pressure, aes(x=temperature, y=pressure)) + geom_line() + geom_point() +
layer(dataq=pressure, aes(x=temperature, y=pressure/2), geom='line')
ggplot(data=pressure, aes(x=temperature, y=pressure)) + geom_line() + geom_point() +
layer(data=pressure, aes(x=temperature, y=pressure/2), geom='line')
ggplot() + layer(data=pressure, aes(x=temperature, y=pressure/2), geom='line')
ggplot(data=pressure, aes(x=temperature, y=pressure)) + geom_line() +
geom_line(aes(x=temperature, y=pressure/2))
ggplot(data=pressure, aes(x=temperature, y=pressure)) + geom_line() +
geom_line(aes(x=temperature, y=pressure/2), colour='red')
ggplot(data=pressure, aes(x=temperature, y=pressure)) + geom_line() +
geom_line(aes(y=pressure/2), colour='red')
table(mtcars$cyl)
barplot(table(mtcars$cyl))
barplot(mtcars$cyl)
barplot(table(mtcars$cyl))
ggplot(matcars, aes(x=cyl)) + geom_bar()
ggplot(mtcars, aes(x=cyl)) + geom_bar()
ggplot(mtcars, aes(x=cyl)) + geom_bar(stat='identity')
ggplot(mtcars, aes(x=cyl)) + geom_bar()
ggplot(mtcars, aes(x=factor(cyl))) + geom_bar()
getwd()
library(ggplot2)
attach(BOD)
qplot(BOD$Time, BOD$demand)
qplot(BOD$Time, BOD$demand, geom='bar')
qplot(BOD$Time, BOD$demand, geom='bar', stat='identity')
qplot(factor(BOD$Time), BOD$demand, geom='bar', stat='identity')
ggplot(BOD, aes(x=demand, y=Time)) +geom_bar()
ggplot(BOD, aes(x=demand, y=Time)) +geom_bar(stat='identity')
ggplot(BOD, aes(x=Time, y=demand)) +geom_bar(stat='identity')
ggplot(BOD, aes(x=factor(Time), y=demand)) +geom_bar(stat='identity')
plot(Time, demand, data=BOD)
plot(Time, demand)
warnings()
plot(Time, demand, data=BOD)
plot(factor(Time), demand, data=BOD)
plot(factor(BOD$Time), BOD$demand)
boxplot(Time ~ demand, data=BOD)
qplot(Time ~ demand, data=BOD)
qplot(Time, demand, data=BOD)
qplot(Time, demand, data=BOD, geom='boxplot')
attach(ToothGrowth)
boxplot(supp, len, data=ToothGrowth)
boxplot(len, supp, data=ToothGrowth)
boxplot(len ~ supp, data=ToothGrowth)
boxplot(len, supp, data=ToothGrowth)
boxplot(len ~ supp, data=ToothGrowth)
boxplot(len, supp, data=ToothGrowth)
len~supp
len~supp
ToothGrowth$len~ToothGrowth$supp
x <- ToothGrowth$len~ToothGrowth$supp
x
typeof(x)
qplot(supp, len, data=ToothGrowth, geom='boxplot')
boxplot(len ~ supp, data=ToothGrowth)
qplot(supp, len, data=ToothGrowth, geom='boxplot')
str(ToothGrowth)
boxplot(len ~ supp + dose, data=ToothGrowth)
boxplot(len + dose ~ supp, data=ToothGrowth)
ggplot(ToothGrowth, aes(x=supp, y=len), geom='boxplot')
ggplot(ToothGrowth, aes(x=supp, y=len)) + geom_boxplot()
interaction(len, supp)
qplot(interaction(supp, dose), len, geom='boxplot')
ggplot(aes(interaction(supp, dose), len)) + geom_boxplot()
ggplot(ToothGrowth, aes(interaction(supp, dose), len)) + geom_boxplot()
detach(ToothGrowth)
ggplot(ToothGrowth, aes(interaction(supp, dose), len)) + geom_boxplot()
.75*.3/(0.75+1-0.52)
?qnorm
qnorm(0.95, mean=1100, sd=75)
qnorm(0.95, mean=1100, sd=75/100)
qnorm(0.95, mean=1100, sd=75/10)
0.5^5
0.5^4
?ppoiss
?ppois
dpois(3,5)
ppois(0.14,5)
ppois(10,5)
ppois(5,5)
qpois(0.616,5)
ppois(10,15)
datasets(ToothGrowth)
data(ToothGrowth)
str(ToothGrowth)
?ToothGrowth
hist(runif(1000))
mns <- NULL
for (i in 1:1000) mns <- c(mns, mean(runif(40)))
hist(mns)
hist(rexp(10000))
for (i in 1:10000) mns <- c(mns, mean(rexp(40)))
hist(mns)
?rexp
1/sqrt(40)
mean(mns)
sd(mns)
for (i in 1:100000) mns <- c(mns, mean(rexp(40)))
hist(mns)
sd(mns)
mean(mns)
quit()
curve(dexp)
curve(dweibull)
curve(dexp, rate=0.2)
curve(dexp(rate=0.2))
?dexp
curve(dexp(x, rate=0.2))
curve(dweibull(x, shape=1, rate=0.2))
curve(dweibull(x, shape=1, scale=0.2))
curve(dweibull(x, shape=1, scale=5))
curve(dweibull(x, shape=0, scale=5))
curve(dweibull(x, shape=5, scale=5))
curve(dweibull(x, shape=1, scale=5))
curve(dweibull(x, shape=1.5, scale=5))
curve(dweibull(x, shape=0.6, scale=5))
curve(dexp(x, rate=0.2))
?curve
curve(dexp(x, rate=0.2))
curve(dexp(x, rate=0.2), to=5)
curve(dweibull(x, shape=1, scale=1/0.2), to=5)
curve(dweibull(x, shape=0.9, scale=1/0.2), to=5)
curve(dweibull(x, shape=1.1, scale=1/0.2), to=5)
curve(dweibull(x, shape=1.01, scale=1/0.2), to=5)
curve(dweibull(x, shape=0.99, scale=1/0.2), to=5)
?gamma
curve(gamma)
?gamma
?dgamma
curve(dgamma(x, shape=1, rate=0.2), to=5)
source('~/coursera/statinf/project-1.R', echo=TRUE)
curve(density(data), add=TRUE)
density(data)
curve(density(data))
plot(density(data))
hist(m, prob=TRUE, breaks=40, main='Histogram', xlab='Samples means')
lines(density(data))
hist(m, prob=TRUE, breaks=40, main='Histogram', xlab='Samples means')
lines(density(m))
curve(dnorm(x, mean=1/lambda, sd=1/lambda/sqrt(n)), col='red', lty=2, lwd=2, add=TRUE)
hist(m, prob=TRUE, breaks=40, main='Histogram', xlab='Samples means')
lines(density(m), col='blue', lwd=4)
curve(dnorm(x, mean=1/lambda, sd=1/lambda/sqrt(n)), col='red', lty=2, lwd=2, add=TRUE)
hist(m, prob=TRUE, breaks=40, main='Histogram', xlab='Samples means')
lines(density(m), col='blue', lwd=4)
curve(dnorm(x, mean=1/lambda, sd=1/lambda/sqrt(n)), col='red', lty=2, lwd=2, add=TRUE)
s
s <- appply(data, 2, sd)
s <- apply(data, 2, sd)
hist(s, prob=TRUE, breaks=40, main='Histogram', xlab='Sample std. deviations')
1/lambda
m
mean(m)
m+c(-1, 0, 1)*qt(0.975, df=n-1)sd(m)/sqrt(n)
m+c(-1, 0, 1)*qt(0.975, df=n-1)*sd(m)/sqrt(n)
mean(m)+c(-1, 0, 1)*qt(0.975, df=n-1)*sd(m)/sqrt(n)
mean(m)+c(-1, 0, 1)*qnorm(0.975, mean=1/lambda, sd=1/lambda)*sd(m)/sqrt(n)
qnorm(0.975, mean=1/lambda, sd=1/lambda)
sd(m)
qnorm(0.975)
mean(m)+c(-1, 0, 1)*qnorm(0.975)*sd(m)/sqrt(n)
mean(m)+c(-1, 0, 1)*qt(0.975, df=n-1)*sd(m)/sqrt(n)
hist(s, prob=TRUE, breaks=40, main='Histogram', xlab='Sample std. deviations')
lines(density(s), col='blue', lwd=4)
abline(h=1/lambda, col='red', lwd=2, lty=2)
hist(s, prob=TRUE, breaks=40, main='Histogram', xlab='Sample std. deviations')
abline(h=1/lambda, col='red', lwd=2, lty=2)
lines(density(s), col='blue', lwd=4)
?abline
abline(h=1/lambda, col='red', lwd=2, lty=2)
abline(v=1/lambda, col='red', lwd=2, lty=2)
s
mean(s)
hist(s, prob=TRUE, breaks=40, main='Histogram', xlab='Sample std. deviations')
abline(v=1/lambda, col='red', lwd=2, lty=4)
lines(density(s), col='blue', lwd=4)
hist(s, prob=TRUE, breaks=40, main='Histogram', xlab='Sample std. deviations')
abline(v=1/lambda, col='red', lwd=2, lty=2)
lines(density(s), col='blue', lwd=4)
median(s)
1/lambda/sqrt(n)
sd(m)
s <- apply(data, 2, sd)
hist(s, prob=TRUE, breaks=40, main='Histogram', xlab='Sample std. deviations')
abline(v=1/lambda, col='red', lwd=2, lty=2)
lines(density(s), col='blue', lwd=4)
s <- apply(data, 2, sd)/sqrt(n)
hist(s, prob=TRUE, breaks=40, main='Histogram', xlab='Sample std. deviations')
abline(v=1/lambda/sqrt(n), col='red', lwd=2, lty=2)
lines(density(s), col='blue', lwd=4)
sd(m)
1/lambda/sqrt(n)
max(s)
s <- apply(data, 2, sd)
hist(s, prob=TRUE, breaks=40, main='Histogram', xlab='Sample std. deviations')
abline(v=1/lambda/sqrt(n), col='red', lwd=2, lty=2)
s <- apply(data, 2, sd)/sqrt(n)
hist(s, prob=TRUE, breaks=40, main='Histogram', xlab='Sample std. deviations')
abline(v=1/lambda/sqrt(n), col='red', lwd=2, lty=2)
lines(density(s), col='blue', lwd=4)
sd(m)
sd(m)
1/lambda/sqrt(n)
var(m)
1/lambda^2/n
mean(s)
abline(v=sd(m), col='red', lwd=2, lty=2)
abline(v=sd(m), col='green', lwd=2, lty=5)
abline(v=sd(m), col='darkgreen', lwd=2, lty=5)
hist(s, prob=TRUE, breaks=40, main='Histogram', xlab='Sample std. deviations')
abline(v=1/lambda/sqrt(n), col='red', lwd=2, lty=2)
abline(v=mean(s), col='darkgreen', lwd=2, lty=5)
s <- apply(data, 2, sd)/sqrt(n)
hist(s, prob=TRUE, breaks=40, main='Histogram', xlab='Sample std. deviations')
abline(v=1/lambda/sqrt(n), col='red', lwd=2, lty=2)
abline(v=sd(m), col='darkgreen', lwd=2, lty=5)
lines(density(s), col='blue', lwd=4)
hist(m, prob=TRUE, breaks=40, main='Histogram', xlab='Samples means')
lines(density(m), col='blue', lwd=4)
curve(dnorm(x, mean=1/lambda, sd=1/lambda/sqrt(n)), col='red', lty=2, lwd=2, add=TRUE)
source('~/coursera/statinf/project-1.R', echo=TRUE)
mean(m)+c(-1, 0, 1)*qt(0.975, df=n-1)*sd(m)/sqrt(n)
mean(m)+c(-1, 0, 1)*qnorm(0.975)*sd(m)/sqrt(n)
source('~/coursera/statinf/project-2.R', echo=TRUE)
t.test(len~dose, data=ToothGrowth, paired=FALSE)
t.test(len~dose, data=filter(ToothGrowth, dose!=0.5), paired=FALSE)
t.test(len~dose, data=filter(ToothGrowth, dose!=0.5), paired=FALSE)
t.test(len~dose, data=filter(ToothGrowth, dose!=1), paired=FALSE)
t.test(len~dose, data=filter(ToothGrowth, dose!=2), paired=FALSE)
t.test(len~dose, data=filter(ToothGrowth, dose!=0.5), paired=FALSE, var.equal=TRUE)
t.test(len~dose, data=filter(ToothGrowth, dose!=1), paired=FALSE, var.equal=TRUE)
t.test(len~dose, data=filter(ToothGrowth, dose!=2), paired=FALSE, var.equal=TRUE)
t.test(len~dose, data=filter(ToothGrowth, dose!=0.5), paired=FALSE)
t.test(len~dose, data=filter(ToothGrowth, dose!=0.5), paired=FALSE, var.equal=TRUE)
t.test(len~dose, data=filter(ToothGrowth, dose!=0.5), paired=FALSE, var.equal=TRUE)
t.test(len~supp, data=filter(ToothGrowth, dose==2), paired=FALSE, var.equal=TRUE)
t.test(len~supp, data=filter(ToothGrowth, dose==1), paired=FALSE, var.equal=TRUE)
t.test(len~supp, data=filter(ToothGrowth, dose==0.5), paired=FALSE, var.equal=TRUE)
t.test(len~supp, data=filter(ToothGrowth, dose==2), paired=FALSE, var.equal=TRUE)
t.test(len~dose, data=filter(ToothGrowth, dose!=1), paired=FALSE)
t.test(len~dose, data=filter(ToothGrowth, dose!=1), paired=FALSE, var.equal=TRUE)
summary(ToothGrowth)
with(ToothGrowth, table(supp, dose))
source('~/.active-rstudio-document', echo=TRUE)
t.test(len~small.dose, data=ToothGrowth, paired=FALSE, var.equal=TRUE)
data.frame(t.test(len~small.dose, data=ToothGrowth, paired=FALSE, var.equal=TRUE))
t1 <- t.test(len~small.dose, data=ToothGrowth, paired=FALSE, var.equal=TRUE)
str(t1)
class(t1)
plot(t1)
unlist(t1)
data.frame(unlist(t1))
unlist(t1)
data.frame(unlist(t1))
t2 <- t.test(len~large.dose, data=ToothGrowth, paired=FALSE, var.equal=TRUE)
cbind(data.frame(unlist(t1)), data.frame(unlist(t2)))
test <- cbind(
data.frame(unlist(t.test(len~small.dose, data=ToothGrowth, paired=FALSE, var.equal=TRUE))),
data.frame(unlist(t.test(len~large.dose, data=ToothGrowth, paired=FALSE, var.equal=TRUE))),
)
test <- cbind(
data.frame(unlist(t.test(len~small.dose, data=ToothGrowth, paired=FALSE, var.equal=TRUE))),
data.frame(unlist(t.test(len~large.dose, data=ToothGrowth, paired=FALSE, var.equal=TRUE)))
)
test
data.frame(unlist(t.test(len~small.dose, data=ToothGrowth, paired=FALSE, var.equal=TRUE)))
data.frame(unlist(t.test(len~small.dose, data=ToothGrowth, paired=FALSE, var.equal=TRUE)))
?data.frame
data.frame(unlist(t.test(len~small.dose, data=ToothGrowth, paired=FALSE, var.equal=TRUE)),
row.names='data.name'),
data.frame(unlist(t.test(len~small.dose, data=ToothGrowth, paired=FALSE, var.equal=TRUE)),
row.names='data.name'),
data.frame(unlist(t.test(len~small.dose, data=ToothGrowth, paired=FALSE, var.equal=TRUE)),
row.names='data.name')
test <- cbind(
data.frame(unlist(t.test(len~small.dose, data=ToothGrowth, paired=FALSE, var.equal=TRUE))),
data.frame(unlist(t.test(len~large.dose, data=ToothGrowth, paired=FALSE, var.equal=TRUE)))
)
names(test)
names(test) <- c('t1', 't2')
test
test['data.name']
test[, 'data.name']
test['data.name', ]
unlist(test['data.name', ])
names(test) <- unlist(test['data.name', ])
test
test['data.name', ] <- NULL
test['data.name', ] <- []
test['data.name', ] <- na
test['data.name', ] <- NA
test
test['data.name', ] <- NULL
test['data.name'] <- NULL
test
test['data.name']
test['data.name', ]
test[!'data.name', ]
kable(test)
kable(test, digits=2)
?kable
str(test)
?data.frame
data.frame(unlist(t.test(len~small.dose, data=ToothGrowth, paired=FALSE, var.equal=TRUE)))
data.frame(t.test(len~small.dose, data=ToothGrowth, paired=FALSE, var.equal=TRUE))
t1
str(t1)
source('~/coursera/statinf/project-2.R', echo=TRUE)
t1
t1 <- t.test(len~large.dose, data=ToothGrowth, paired=FALSE, var.equal=TRUE)
str(t1)
t1
t1[, 1:5]
t1[1:5]
unlist(t1[1:5])
unlist(t1[6:10])
?errot
?error
?warning
unlist(t1[1:6])
data.frame(unlist(t1[1:6]))
res <- data.frame(unlist(t1[1:6]))
names(res) <- t1['data.name']
res
s <- unlist(t1[7:10])
s
data.frame(s)
res
cbind(res, s)
rbind(res, s)
s
str(res)
x
x <- unlist(t1[1:6])
x
t(x)
data.frame(t(x))
res <- data.frame(t(x))
rbind(res, s)
cbind(res, s)
cbind(res, t(s))
ttest <- t1
x <- t(unlist(ttest[1:6]))
s <- t(unlist(ttest[7:10]))
x
s
result <- data.frame(x)
result
names(result) <- ttest['data.name']
result
result <- data.frame(x)
result
result <- data.frame(cbind(x, s)
)
result <- data.frame(cbind(x, s))
result
str(result)
result <- data.frame(x)
data.frame(s)
result <- cbind(data.frame(x), data.frame(s))
result
str(result)
result
rownames(result)
rownames(result) <- result['data.name']
result
result['data.name']
kable(result)
?rownames
str(result)
rownames(result)
test.df(t1)
ttest.df(t1)
}
if (3==4) print(FALSE)
if (3==3) print(FALSE)
source('~/.active-rstudio-document', echo=TRUE)
ttest.df(t1)
source('~/coursera/statinf/ttest.df.R', echo=TRUE)
ttest.df(t1)
kable(result)
source('~/.active-rstudio-document', echo=TRUE)
ttest.df(t1)
kable(result)
?select
?subset
subset(results, c(1,2,3))
subset(result, c(1,2,3))
subset(result, select=c(1,2,3))
subset(result, select=c(1:5))
subset(result, select=c(1:7))
source('~/coursera/statinf/ttest.df.R', echo=TRUE)
source('~/coursera/statinf/ttest.df.R', echo=TRUE)
ttest.df(t1)
ttest <- ttest.df(t1)
kable(ttest)
source('~/coursera/statinf/ttest.df.R', echo=TRUE)
ttest <- ttest.df(t1)
kable(ttest)
str(t1)
result <- cbind(data.frame(x), data.frame(s))
result
result <- subset(result, select=c(1:7, 9, 10))
names(result) <- c('t test', 'df', 'p-value', 'CI.inf', 'CI.sup', 'mean.1', 'mean.2',
'alternative', 'method')
rownames(result) <- ttest['data.name']
source('~/coursera/statinf/ttest.df.R', echo=TRUE)
ttest <- ttest.df(t1)
kable(ttest)
source('~/coursera/statinf/ttest.df.R', echo=TRUE)
t1 <- t.test(len~small.dose, data=ToothGrowth, paired=FALSE, var.equal=TRUE)
t2 <- t.test(len~large.dose, data=ToothGrowth, paired=FALSE, var.equal=TRUE)
t1
ttest.df(t1)
ttest.df(t2)
rbind(ttest.df(t1), ttest.df(t2))
t1 <- t.test(len~small.dose, data=ToothGrowth, paired=FALSE, var.equal=TRUE)
t2 <- t.test(len~large.dose, data=ToothGrowth, paired=FALSE, var.equal=TRUE)
tall <- rbind(ttest.df(t1), ttest.df(t2))
kable(tall)
?rbind
source('~/coursera/statinf/ttest.df.R', echo=TRUE)
t1
test.df(t1)
ttest.df(t1)
1/.2
1/.2/sqrt(40)
1/0.2^2/40
?apply
library(swirl)
swirl()
dice_sqr
ex2_fair <- dice_sqr*dice_fair
ex2_fair <- sum(dice_sqr*dice_fair)
ex2_fair-3.5^2
sum(dice_high*dice_sqr)-edh^2
sd(apply(matrix(rnorm(1000), 1000), 1, mean))
sd(apply(matrix(rnorm(10000), 1000), 1, mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000), 1000), 1, mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000, 4), 1000), 1, mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1, 10000, TRUE), 1000), 1, mean))
quit()
?download.file.method
?options
.Options
shiny::runApp('coursera/devdataprod/app1')
shiny::runApp('coursera/devdataprod/app1')
library(shinyapps)
shiny::runApp('coursera/devdataprod/app1')
setwd("~/coursera/devdataprod/project/CLT")
shiny::runApp()
setwd("~/coursera/devdataprod/project/slidy/CLT")
library(shiny)
library(shinyapps)
slidify('index.Rmd')
library(slidify)
slidify('index.Rmd')
publish(title = 'CLT', 'index.html', host = 'rpubs')
slidify('index.Rmd')
?"slidify"
publish(title = 'CLT', 'index.html', host = 'rpubs')
